version: '3.9'
services:
  control-host:
    hostname: ${CONTROL_HOST}
    container_name: ${CONTROL_HOST}
    image: ${IMAGE_NAME}
    environment:
      - TZ=Asia/Kathmandu
      - DEBIAN_FRONTEND=noninteractive
    command: >
      bash -c "apt update &&  
      apt upgrade -y && 
      apt install -y python3 openssh-client software-properties-common && 
      apt-add-repository -y ppa:ansible/ansible &&
      apt update && 
      apt install -y ansible &&
      tail -f /dev/null"
    ports:
      - ${CONTROL_HOST_PORT_WEB}:80
      - ${CONTROL_HOST_PORT_SSHD}:22
    working_dir: ${WORKING_DIR}
    volumes:
      - ${HOME}/ansible/ansible_vol/${CONTROL_HOST}:${WORKING_DIR}
    tty: true
    networks:
      ansible-net:
        ipv4_address: ${CONTROL_HOST_IP_ADDR}


  node1:
    hostname: ${NODE1}
    container_name: ${NODE1}
    image: ${IMAGE_NAME}
    command: >
      bash -c 'apt update &&
      apt install ssh -y &&
      echo "PermitRootLogin yes" >> /etc/ssh/sshd_config &&
      echo root:P@ssword0 | chpasswd &&
      service ssh restart && service ssh start &&
      apt update &&
      tail -f /dev/null'
    ports:
      - ${NODE1_PORT_WEB}:80
      - ${NODE1_PORT_SSHD}:22
    working_dir: ${WORKING_DIR}
    volumes:
      - ${HOME}/ansible/ansible_vol/${NODE1}:${WORKING_DIR}
    tty: true
    networks:
      ansible-net:
        ipv4_address: ${NODE1_IP_ADDR}

  node2:
    hostname: ${NODE2}
    container_name: ${NODE2}
    image: ${IMAGE_NAME}
    tty: true
    command: >
      bash -c 'apt update &&
      apt install ssh -y &&
      echo "PermitRootLogin yes" >> /etc/ssh/sshd_config &&
      echo root:P@ssword0 | chpasswd &&
      service ssh restart && service ssh start &&
      apt update &&
      tail -f /dev/null'
    ports:
      - ${NODE2_PORT_WEB}:80
      - ${NODE2_PORT_SSHD}:22
    working_dir: ${WORKING_DIR}
    volumes:
      - ${HOME}/ansible/ansible_vol/${NODE2}:${WORKING_DIR}
    networks:
      ansible-net:
        ipv4_address: ${NODE2_IP_ADDR}
  

networks:
  ansible-net:
    name: ${NETWORK_NAME}
    driver: bridge
    ipam:
      config:
        - subnet: ${NETWORK_SUBNET_BLOCK}
          gateway: ${NETWORK_GATEWAY}